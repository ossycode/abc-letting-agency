// This file is auto-generated by @hey-api/openapi-ts

export const AddPermissionsRequestSchema = {
    type: 'object',
    properties: {
        permissions: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const AddUserPermissionsRequestSchema = {
    type: 'object',
    properties: {
        permissions: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const ChangePasswordRequestSchema = {
    type: 'object',
    properties: {
        currentPassword: {
            type: 'string',
            nullable: true
        },
        newPassword: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const CreateLandlordRequestSchema = {
    required: ['name'],
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        phone: {
            type: 'string',
            nullable: true
        },
        address: {
            type: 'string',
            nullable: true
        },
        bankIban: {
            type: 'string',
            nullable: true
        },
        bankSort: {
            type: 'string',
            nullable: true
        },
        notes: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const CreateRoleRequestSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        permissions: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const DeleteMeRequestSchema = {
    type: 'object',
    properties: {
        currentPassword: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const FilterRuleSchema = {
    required: ['field', 'op', 'value'],
    type: 'object',
    properties: {
        field: {
            type: 'string',
            nullable: true
        },
        op: {
            type: 'string',
            nullable: true
        },
        value: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const LandlordDtoSchema = {
    required: ['id', 'name'],
    type: 'object',
    properties: {
        id: {
            type: 'string',
            nullable: true
        },
        name: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        phone: {
            type: 'string',
            nullable: true
        },
        address: {
            type: 'string',
            nullable: true
        },
        bankIban: {
            type: 'string',
            nullable: true
        },
        bankSort: {
            type: 'string',
            nullable: true
        },
        notes: {
            type: 'string',
            nullable: true
        },
        propertyCount: {
            type: 'integer',
            format: 'int32'
        },
        tenancyCount: {
            type: 'integer',
            format: 'int32'
        },
        invoiceCount: {
            type: 'integer',
            format: 'int32'
        },
        createdAt: {
            type: 'string',
            format: 'date-time'
        },
        updatedAt: {
            type: 'string',
            format: 'date-time'
        }
    },
    additionalProperties: false
} as const;

export const LandlordDtoPagedListSchema = {
    required: ['items', 'page', 'pageSize', 'total'],
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/LandlordDto'
            },
            nullable: true
        },
        page: {
            type: 'integer',
            format: 'int32'
        },
        pageSize: {
            type: 'integer',
            format: 'int32'
        },
        total: {
            type: 'integer',
            format: 'int32'
        },
        totalPages: {
            type: 'integer',
            format: 'int32',
            readOnly: true
        }
    },
    additionalProperties: false
} as const;

export const LoginRequestSchema = {
    required: ['email', 'password'],
    type: 'object',
    properties: {
        email: {
            type: 'string',
            nullable: true
        },
        password: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const ProblemDetailsSchema = {
    type: 'object',
    properties: {
        type: {
            type: 'string',
            nullable: true
        },
        title: {
            type: 'string',
            nullable: true
        },
        status: {
            type: 'integer',
            format: 'int32',
            nullable: true
        },
        detail: {
            type: 'string',
            nullable: true
        },
        instance: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: {}
} as const;

export const RegisterRequestSchema = {
    required: ['email', 'firstName', 'lastName', 'password'],
    type: 'object',
    properties: {
        firstName: {
            type: 'string',
            nullable: true
        },
        lastName: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        password: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const RenameRoleRequestSchema = {
    type: 'object',
    properties: {
        newName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const RoleDtoSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        permissions: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const SetPermissionsRequestSchema = {
    type: 'object',
    properties: {
        permissions: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const UpdateLandlordRequestSchema = {
    type: 'object',
    properties: {
        name: {
            type: 'string',
            nullable: true
        },
        email: {
            type: 'string',
            nullable: true
        },
        phone: {
            type: 'string',
            nullable: true
        },
        address: {
            type: 'string',
            nullable: true
        },
        bankIban: {
            type: 'string',
            nullable: true
        },
        bankSort: {
            type: 'string',
            nullable: true
        },
        notes: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const UpdateMeRequestSchema = {
    type: 'object',
    properties: {
        firstName: {
            type: 'string',
            nullable: true
        },
        lastName: {
            type: 'string',
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const UpdateUserRolesRequestSchema = {
    type: 'object',
    properties: {
        roles: {
            type: 'array',
            items: {
                type: 'string'
            },
            nullable: true
        }
    },
    additionalProperties: false
} as const;

export const LandlordDtoPagedListWritableSchema = {
    required: ['items', 'page', 'pageSize', 'total'],
    type: 'object',
    properties: {
        items: {
            type: 'array',
            items: {
                '$ref': '#/components/schemas/LandlordDto'
            },
            nullable: true
        },
        page: {
            type: 'integer',
            format: 'int32'
        },
        pageSize: {
            type: 'integer',
            format: 'int32'
        },
        total: {
            type: 'integer',
            format: 'int32'
        }
    },
    additionalProperties: false
} as const;
