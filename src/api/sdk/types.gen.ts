// This file is auto-generated by @hey-api/openapi-ts

export type AddPermissionsRequest = {
    permissions?: Array<string> | null;
};

export type AddUserPermissionsRequest = {
    permissions?: Array<string> | null;
};

export type ChangePasswordRequest = {
    currentPassword?: string | null;
    newPassword?: string | null;
};

export type CreateLandlordRequest = {
    name: string | null;
    email?: string | null;
    phone?: string | null;
    address?: string | null;
    bankIban?: string | null;
    bankSort?: string | null;
    notes?: string | null;
};

export type CreateRoleRequest = {
    name?: string | null;
    permissions?: Array<string> | null;
};

export type DeleteMeRequest = {
    currentPassword?: string | null;
};

export type FilterRule = {
    field: string | null;
    op: string | null;
    value: string | null;
};

export type LandlordDto = {
    id: string | null;
    name: string | null;
    email?: string | null;
    phone?: string | null;
    address?: string | null;
    bankIban?: string | null;
    bankSort?: string | null;
    notes?: string | null;
    propertyCount?: number;
    tenancyCount?: number;
    invoiceCount?: number;
    createdAt?: Date;
    updatedAt?: Date;
};

export type LandlordDtoPagedList = {
    items: Array<LandlordDto> | null;
    page: number;
    pageSize: number;
    total: number;
    readonly totalPages?: number;
};

export type LoginRequest = {
    email: string | null;
    password: string | null;
};

export type ProblemDetails = {
    type?: string | null;
    title?: string | null;
    status?: number | null;
    detail?: string | null;
    instance?: string | null;
    [key: string]: unknown | string | null | string | null | number | null | string | null | string | null | undefined;
};

export type RegisterRequest = {
    firstName: string | null;
    lastName: string | null;
    email: string | null;
    password: string | null;
};

export type RenameRoleRequest = {
    newName?: string | null;
};

export type RoleDto = {
    name?: string | null;
    permissions?: Array<string> | null;
};

export type SetPermissionsRequest = {
    permissions?: Array<string> | null;
};

export type UpdateLandlordRequest = {
    name?: string | null;
    email?: string | null;
    phone?: string | null;
    address?: string | null;
    bankIban?: string | null;
    bankSort?: string | null;
    notes?: string | null;
};

export type UpdateMeRequest = {
    firstName?: string | null;
    lastName?: string | null;
};

export type UpdateUserRolesRequest = {
    roles?: Array<string> | null;
};

export type LandlordDtoPagedListWritable = {
    items: Array<LandlordDto> | null;
    page: number;
    pageSize: number;
    total: number;
};

export type GetApiAdminPermissionsCatalogData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/AdminPermissionsCatalog';
};

export type GetApiAdminPermissionsCatalogResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiAdminRolesData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/AdminRoles';
};

export type GetApiAdminRolesResponses = {
    /**
     * OK
     */
    200: Array<RoleDto>;
};

export type GetApiAdminRolesResponse = GetApiAdminRolesResponses[keyof GetApiAdminRolesResponses];

export type PostApiAdminRolesData = {
    body?: CreateRoleRequest;
    path?: never;
    query?: never;
    url: '/api/AdminRoles';
};

export type PostApiAdminRolesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiAdminRolesByRoleNameData = {
    body?: never;
    path: {
        roleName: string;
    };
    query?: never;
    url: '/api/AdminRoles/{roleName}';
};

export type DeleteApiAdminRolesByRoleNameResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiAdminRolesByRoleNameData = {
    body?: never;
    path: {
        roleName: string;
    };
    query?: never;
    url: '/api/AdminRoles/{roleName}';
};

export type GetApiAdminRolesByRoleNameResponses = {
    /**
     * OK
     */
    200: RoleDto;
};

export type GetApiAdminRolesByRoleNameResponse = GetApiAdminRolesByRoleNameResponses[keyof GetApiAdminRolesByRoleNameResponses];

export type PatchApiAdminRolesByRoleNameRenameData = {
    body?: RenameRoleRequest;
    path: {
        roleName: string;
    };
    query?: never;
    url: '/api/AdminRoles/{roleName}/rename';
};

export type PatchApiAdminRolesByRoleNameRenameResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiAdminRolesByRoleNamePermissionsData = {
    body?: never;
    path: {
        roleName: string;
    };
    query?: never;
    url: '/api/AdminRoles/{roleName}/permissions';
};

export type GetApiAdminRolesByRoleNamePermissionsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiAdminRolesByRoleNamePermissionsData = {
    body?: AddPermissionsRequest;
    path: {
        roleName: string;
    };
    query?: never;
    url: '/api/AdminRoles/{roleName}/permissions';
};

export type PostApiAdminRolesByRoleNamePermissionsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PutApiAdminRolesByRoleNamePermissionsData = {
    body?: SetPermissionsRequest;
    path: {
        roleName: string;
    };
    query?: never;
    url: '/api/AdminRoles/{roleName}/permissions';
};

export type PutApiAdminRolesByRoleNamePermissionsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiAdminRolesByRoleNamePermissionsByPermissionData = {
    body?: never;
    path: {
        roleName: string;
        permission: string;
    };
    query?: never;
    url: '/api/AdminRoles/{roleName}/permissions/{permission}';
};

export type DeleteApiAdminRolesByRoleNamePermissionsByPermissionResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiAuthRegisterData = {
    body?: RegisterRequest;
    path?: never;
    query?: never;
    url: '/api/Auth/register';
};

export type PostApiAuthRegisterErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PostApiAuthRegisterError = PostApiAuthRegisterErrors[keyof PostApiAuthRegisterErrors];

export type PostApiAuthRegisterResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PostApiAuthRegisterResponse = PostApiAuthRegisterResponses[keyof PostApiAuthRegisterResponses];

export type PostApiAuthLoginData = {
    body?: LoginRequest;
    path?: never;
    query?: never;
    url: '/api/Auth/login';
};

export type PostApiAuthLoginErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PostApiAuthLoginError = PostApiAuthLoginErrors[keyof PostApiAuthLoginErrors];

export type PostApiAuthLoginResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PostApiAuthLoginResponse = PostApiAuthLoginResponses[keyof PostApiAuthLoginResponses];

export type PostApiAuthRefreshData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/Auth/refresh';
};

export type PostApiAuthRefreshErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PostApiAuthRefreshError = PostApiAuthRefreshErrors[keyof PostApiAuthRefreshErrors];

export type PostApiAuthRefreshResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PostApiAuthRefreshResponse = PostApiAuthRefreshResponses[keyof PostApiAuthRefreshResponses];

export type PostApiAuthLogoutData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/Auth/logout';
};

export type PostApiAuthLogoutErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PostApiAuthLogoutError = PostApiAuthLogoutErrors[keyof PostApiAuthLogoutErrors];

export type PostApiAuthLogoutResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PostApiAuthLogoutResponse = PostApiAuthLogoutResponses[keyof PostApiAuthLogoutResponses];

export type GetApiLandlordData = {
    body?: never;
    path?: never;
    query?: {
        Page?: number;
        PageSize?: number;
        SortBy?: string;
        SortDesc?: boolean;
        Search?: string;
        SearchFields?: Array<string>;
        filters?: Array<FilterRule>;
    };
    url: '/api/Landlord';
};

export type GetApiLandlordErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type GetApiLandlordError = GetApiLandlordErrors[keyof GetApiLandlordErrors];

export type GetApiLandlordResponses = {
    /**
     * OK
     */
    200: LandlordDtoPagedList;
    /**
     * Created
     */
    201: LandlordDtoPagedList;
    /**
     * No Content
     */
    204: void;
};

export type GetApiLandlordResponse = GetApiLandlordResponses[keyof GetApiLandlordResponses];

export type PostApiLandlordData = {
    body?: CreateLandlordRequest;
    path?: never;
    query?: never;
    url: '/api/Landlord';
};

export type PostApiLandlordErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PostApiLandlordError = PostApiLandlordErrors[keyof PostApiLandlordErrors];

export type PostApiLandlordResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PostApiLandlordResponse = PostApiLandlordResponses[keyof PostApiLandlordResponses];

export type DeleteApiLandlordByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/Landlord/{id}';
};

export type DeleteApiLandlordByIdErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type DeleteApiLandlordByIdError = DeleteApiLandlordByIdErrors[keyof DeleteApiLandlordByIdErrors];

export type DeleteApiLandlordByIdResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiLandlordByIdResponse = DeleteApiLandlordByIdResponses[keyof DeleteApiLandlordByIdResponses];

export type GetApiLandlordByIdData = {
    body?: never;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/Landlord/{id}';
};

export type GetApiLandlordByIdErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type GetApiLandlordByIdError = GetApiLandlordByIdErrors[keyof GetApiLandlordByIdErrors];

export type GetApiLandlordByIdResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type GetApiLandlordByIdResponse = GetApiLandlordByIdResponses[keyof GetApiLandlordByIdResponses];

export type PatchApiLandlordByIdData = {
    body?: UpdateLandlordRequest;
    path: {
        id: string;
    };
    query?: never;
    url: '/api/Landlord/{id}';
};

export type PatchApiLandlordByIdErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PatchApiLandlordByIdError = PatchApiLandlordByIdErrors[keyof PatchApiLandlordByIdErrors];

export type PatchApiLandlordByIdResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PatchApiLandlordByIdResponse = PatchApiLandlordByIdResponses[keyof PatchApiLandlordByIdResponses];

export type DeleteApiUserData = {
    body?: DeleteMeRequest;
    path?: never;
    query?: never;
    url: '/api/User';
};

export type DeleteApiUserErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type DeleteApiUserError = DeleteApiUserErrors[keyof DeleteApiUserErrors];

export type DeleteApiUserResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type DeleteApiUserResponse = DeleteApiUserResponses[keyof DeleteApiUserResponses];

export type GetApiUserData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/api/User';
};

export type GetApiUserErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type GetApiUserError = GetApiUserErrors[keyof GetApiUserErrors];

export type GetApiUserResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type GetApiUserResponse = GetApiUserResponses[keyof GetApiUserResponses];

export type PatchApiUserData = {
    body?: UpdateMeRequest;
    path?: never;
    query?: never;
    url: '/api/User';
};

export type PatchApiUserErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PatchApiUserError = PatchApiUserErrors[keyof PatchApiUserErrors];

export type PatchApiUserResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PatchApiUserResponse = PatchApiUserResponses[keyof PatchApiUserResponses];

export type PutApiUserPasswordData = {
    body?: ChangePasswordRequest;
    path?: never;
    query?: never;
    url: '/api/User/password';
};

export type PutApiUserPasswordErrors = {
    /**
     * Bad Request
     */
    400: ProblemDetails;
    /**
     * Unauthorized
     */
    401: ProblemDetails;
    /**
     * Forbidden
     */
    403: ProblemDetails;
    /**
     * Not Found
     */
    404: ProblemDetails;
    /**
     * Conflict
     */
    409: ProblemDetails;
    /**
     * Unprocessable Content
     */
    422: ProblemDetails;
    /**
     * Internal Server Error
     */
    500: ProblemDetails;
};

export type PutApiUserPasswordError = PutApiUserPasswordErrors[keyof PutApiUserPasswordErrors];

export type PutApiUserPasswordResponses = {
    /**
     * OK
     */
    200: unknown;
    /**
     * Created
     */
    201: unknown;
    /**
     * No Content
     */
    204: void;
};

export type PutApiUserPasswordResponse = PutApiUserPasswordResponses[keyof PutApiUserPasswordResponses];

export type GetApiUsersByUserIdRolesData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: never;
    url: '/api/Users/{userId}/roles';
};

export type GetApiUsersByUserIdRolesResponses = {
    /**
     * OK
     */
    200: Array<string>;
};

export type GetApiUsersByUserIdRolesResponse = GetApiUsersByUserIdRolesResponses[keyof GetApiUsersByUserIdRolesResponses];

export type PostApiUsersByUserIdRolesData = {
    body?: UpdateUserRolesRequest;
    path: {
        userId: string;
    };
    query?: never;
    url: '/api/Users/{userId}/roles';
};

export type PostApiUsersByUserIdRolesResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiUsersByUserIdRolesByRoleNameData = {
    body?: never;
    path: {
        userId: string;
        roleName: string;
    };
    query?: never;
    url: '/api/Users/{userId}/roles/{roleName}';
};

export type DeleteApiUsersByUserIdRolesByRoleNameResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type GetApiUsersByUserIdPermissionsData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: never;
    url: '/api/Users/{userId}/permissions';
};

export type GetApiUsersByUserIdPermissionsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type PostApiUsersByUserIdPermissionsData = {
    body?: AddUserPermissionsRequest;
    path: {
        userId: string;
    };
    query?: never;
    url: '/api/Users/{userId}/permissions';
};

export type PostApiUsersByUserIdPermissionsResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type DeleteApiUsersByUserIdPermissionsByPermissionData = {
    body?: never;
    path: {
        userId: string;
        permission: string;
    };
    query?: never;
    url: '/api/Users/{userId}/permissions/{permission}';
};

export type DeleteApiUsersByUserIdPermissionsByPermissionResponses = {
    /**
     * OK
     */
    200: unknown;
};

export type ClientOptions = {
    baseUrl: 'http://localhost:5171' | (string & {});
};
